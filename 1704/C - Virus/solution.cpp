#include <bits/stdc++.h>using namespace std; void solve() {    long long n, k;    cin >> n >> k;     vector<long long> v(k);    for (int i = 0; i < k; i++) cin >> v[i];     sort(v.begin(), v.end());     // compute gaps    vector<long long> diff;    for (int i = 0; i < k - 1; i++) {        diff.push_back(v[i + 1] - v[i] - 1);    }    diff.push_back(v[0] + n - v[k - 1] - 1);     sort(diff.rbegin(), diff.rend()); // largest gaps first     long long saved = 0;     long long days = 0;     for (auto gap : diff) {        long long currGap = gap - days * 2;        if (currGap > 0) {            saved++;                // protect one side            currGap -= 2;            if (currGap > 0) saved += currGap; // protect rest            days += 2;        }    }     cout << (n - saved) << "\n";} int main() {    ios::sync_with_stdio(false);    cin.tie(nullptr);     int t;    cin >> t;    while (t--) solve();}