#include <bits/stdc++.h>using namespace std; void solve(){    // LOGIC    int n;    cin >> n;    vector<int> v(n), missing, s;    int z = 0;    int sum = 0;    for(int i = 0; i < n; i++){         cin >> v[i];        sum += i+1;        if(v[i] == 0) z++;        missing.push_back(i + 1);    }    if(n ==1){        cout << "0\n";        return;    }      // for(int i = 0; i < n; i++){    //     if(v[i] != 0) {    //        missing.erase(remove(missing.begin(), missing.end(), v[i]), missing.end());    //     }    // }     if(z == n){        cout << n << endl;        return;    }    if(z == 1){        for(int i =0; i < n; i++){            if(v[i] == 0){                v[i] = sum - accumulate(v.begin(), v.end(), 0);            }        }    }     // sort(missing.rbegin(), missing.rend());    // int c = 0;     // for(int i = 0; i < n; i++){    //     if(v[i] == 0){    //         v[i] = missing[c];    //         c++;    //     }    // }     // for(auto i: v){    //     cout << i << " ";    // }    // cout << endl;     int l = 1, r = n;    int x = 0, y = n;    while(l <= n){        if(v[l-1] != l){            x = l;            break;        }        l++;    }    while(1 <= r){        if(v[r-1] != r){            y = r;            break;        }        r--;    }     // cout << x << " " << y << endl;    if(y - x == n){        cout << "0\n";    }    else{        cout << y - x +1 << endl;    } } int main(){    ios::sync_with_stdio(false); // Fast I/O    cin.tie(nullptr);            // Untie cin from cout     int n;    cin >> n;    while(n--) solve();}