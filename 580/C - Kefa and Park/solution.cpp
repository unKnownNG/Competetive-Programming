#include <bits/stdc++.h>using namespace std;vector<int> v;int m;int ans = 0;vector<vector<int>> g; void dfs(int i , int parent, int consec){    if(v[i]) consec++;    else consec = 0;     if(consec > m) return;     bool isLeaf = true;    for(auto nei:g[i]){        if(nei != parent){            isLeaf = false;            dfs(nei, i, consec );        }    }    if(isLeaf) ans++; } void solve(){    // LOGIC    int n;    cin >>n >> m;    v.resize(n + 1);     for(int i = 1; i<= n ; i++) cin >> v[i];     g.resize(n + 1);    for(int i = 0; i< n  - 1; i++){        int x, y;        cin >> x  >> y;        g[x].push_back(y);        g[y].push_back(x);    }     dfs(1, -1, 0);    cout << ans << endl;} int main(){    ios::sync_with_stdio(false); // Fast I/O    cin.tie(nullptr);            // Untie cin from cout      solve();}