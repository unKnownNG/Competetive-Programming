#include <bits/stdc++.h>using namespace std; vector<vector<int>> adj;vector<bool> vis; void dfs(int u){    vis[u] = true;     for(auto i : adj[u]){        if(!vis[i]) dfs(i);    }}  void solve(){    // LOGIC    int n, m;    cin >> n >> m;     adj.assign(n + m + 1, {});    vis.assign(n + m + 1, false);     bool lang = false;     for(int i = 1;i <= n; i++){        int k;        cin >> k;        if(k > 0) lang = true;        for(int j = 0; j < k; j++){            int idx;            cin >> idx;            adj[i].push_back(n + idx);            adj[n + idx].push_back(i);        }    }     int c = 0;    for (int i = 1; i <= n; i++) {        if (!vis[i]) {            c++;            dfs(i);        }    }          cout <<( (!lang ) ? n : c - 1) << endl;} int main(){    ios::sync_with_stdio(false); // Fast I/O    cin.tie(nullptr);            // Untie cin from cout    solve();}