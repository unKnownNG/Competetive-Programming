#include <bits/stdc++.h>using namespace std; long long rec(vector<long long>& m,  int i,  vector<long long> &dp){    if(i >= m.size()){        return 0;    }     if(dp[i] != -1 ) return dp[i];     long long take = rec(m, i + 2, dp) + m[i] * i * 1LL;    long long notTake = rec(m, i + 1,  dp);     return dp[i] = max(take , notTake);}  void solve() {    int n; cin >> n;    vector<long long> v(n);     for (int i = 0; i < n; i++) cin >> v[i];     long long maxVal = *max_element(v.begin(), v.end());    vector<long long> m(maxVal + 1, 0);     for (int x : v) m[x]++;     vector<long long> dp(maxVal + 1, -1);     cout << rec(m, 0, dp) << "\n";}  int main(){    ios::sync_with_stdio(false); // Fast I/O    cin.tie(nullptr);            // Untie cin from cout     solve();}