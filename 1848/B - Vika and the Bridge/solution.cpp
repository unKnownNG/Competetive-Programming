#include <bits/stdc++.h>using namespace std; void solve(){    // LOGIC    int n,k;    cin >> n >> k;    vector<int> v(n);    vector<vector<int>> color(k + 1);     for(int i = 0; i < n; i++) cin >> v[i];     for(int i = 0; i< k + 1; i++) color[i].push_back(0);     for(int i = 0; i < n; i++){        color[v[i]].push_back(i + 1);    }     for(int i = 0;  i < k+1; i++) color[i].push_back(n + 1);     priority_queue<int> jumps[k + 1];    int ans = INT_MAX;     for(int i  = 0; i < k + 1; i++){        for(int j = 0; j < color[i].size() - 1; j++){            jumps[i].push(color[i][j+ 1] - color[i][j] - 1);        }        int m = jumps[i].top();        jumps[i].pop();        if(jumps[i].size() %2 == 0){            jumps[i].push(m/2);            jumps[i].push(m/2 - 1);        }        else{            jumps[i].push(m/2);            jumps[i].push(m/2);        }        ans = min(jumps[i].top(), ans);    }    cout << ans << endl;} int main(){    ios::sync_with_stdio(false); // Fast I/O    cin.tie(nullptr);            // Untie cin from cout     int n;    cin >> n;    while(n--) solve();}