#include <bits/stdc++.h>using namespace std; void solve(){    // LOGIC    int n, k;    cin >> n >> k;     vector<int> v(n), d(k);    int o = 0;    long long cost  = 0;        for(int i = 0; i< n; i++) cin >> v[i];    for(int i = 0; i< k; i++) {cin >> d[i];         if(d[i] == 1) o++;        }     sort(v.rbegin(), v.rend());     sort(d.begin(), d.end());       int left = 0, right = 0;      for(int i = 0; i < o; i++) {            left++;    }     right = n - 1;    for(int i = 0; i < k && left < n; i++) {        if(d[i] == 1) continue;        int cur = min(d[i], static_cast<int>(v.size()) - left);        if(d[i] <= v.size() - left){            for(int j = 0; j < cur - 1; j++){                cost += v[left + j];                // cout << v[left + j] << " ";            }            left += cur ;         }        else{            for(int j = 0; j < cur; j++){                cost += v[left + j];                // cout << v[left + j] << " ";            }            left += cur;         }                // right = left + cur;            }    if(left < n){        for(; left < n; left++){            cost += v[left];        }    }    // cout << endl;      cout << cost << endl; } int main(){    ios::sync_with_stdio(false); // Fast I/O    cin.tie(nullptr);            // Untie cin from cout     int n;    cin >> n;    while(n--) solve();}